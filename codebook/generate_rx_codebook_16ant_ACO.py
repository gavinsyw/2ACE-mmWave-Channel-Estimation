############################################################################
#Project 2ACE
#PI: Prof. Lili Qiu @ UT Austin/MSRA
#Participants: Yiwen Song @ CMU, Changhan Ge @ UT Austin, Yin Zhang
#Copyright @ The University of Texas at Austin, 2023
#Partially inherited from Teng Wei/Song Wang/Jingqi Huang/Xinyu Zhang @ UCSD
############################################################################

from random import randint
import subprocess as sp
import json
import os

def set_beam_num(file_name, beam_num):
	try:
		sp.check_call(['./wil6210_brd_mod', '-set_beam_num=%d' % beam_num, \
			'-in_brd=%s' % file_name, '-out_brd=%s' % file_name])
	except Exception as e:
		print(e)

def set_beam(file_name, module_index, sector_type, sector_index, gain, phase, amplify):
	try:
		sp.check_call(['./wil6210_brd_mod', '-set_pattern', \
			'-in_brd=%s' % file_name, '-out_brd=%s' % file_name, '-module_index=%d' % module_index, '-sector_type=%d' % sector_type, '-sector_index=%d' % sector_index, \
			'-mag=%s' % gain, '-phase=%s' % phase, '-amp=%s' % amplify])
	except Exception as e:
		print(e)

def enable_modules(file_name, module_index, isTx):
	try:
		for m_idx in module_index:
			sp.check_call(['./wil6210_brd_mod','-in_brd=%s' % file_name, '-out_brd=%s' % file_name, '-enable_module', '-module_index=%d' % m_idx, '-sector_type=%d' % isTx])
	except Exception as e:
		print(e)

def disable_modules(file_name, module_index, isTx):
		try:
			for m_idx in module_index:
				sp.check_call(['./wil6210_brd_mod','-in_brd=%s' % file_name, '-out_brd=%s' % file_name, '-disable_module', '-module_index=%d' % m_idx, '-sector_type=%d' % isTx])
		except Exception as e:
			print(e)

cb_all = []
mag = ['77000000000000000000000000000000',
       '77000000000000000000000000000000',
       '77000000000000000000000000000000',
       '77000000000000000000000000000000',
       '70700000000000000000000000000000',
       '70700000000000000000000000000000',
       '70700000000000000000000000000000',
       '70700000000000000000000000000000',
       '70070000000000000000000000000000',
       '70070000000000000000000000000000',
       '70070000000000000000000000000000',
       '70070000000000000000000000000000',
       '70007000000000000000000000000000',
       '70007000000000000000000000000000',
       '70007000000000000000000000000000',
       '70007000000000000000000000000000',
       '70000700000000000000000000000000',
       '70000700000000000000000000000000',
       '70000700000000000000000000000000',
       '70000700000000000000000000000000',
       '70000070000000000000000000000000',
       '70000070000000000000000000000000',
       '70000070000000000000000000000000',
       '70000070000000000000000000000000',
       '70000007000000000000000000000000',
       '70000007000000000000000000000000',
       '70000007000000000000000000000000',
       '70000007000000000000000000000000',
       '70000000000000007000000000000000',
       '70000000000000007000000000000000',
       '70000000000000007000000000000000',
       '70000000000000007000000000000000',
       '70000000000000000700000000000000',
       '70000000000000000700000000000000',
       '70000000000000000700000000000000',
       '70000000000000000700000000000000',
       '70000000000000000070000000000000',
       '70000000000000000070000000000000',
       '70000000000000000070000000000000',
       '70000000000000000070000000000000',
       '70000000000000000007000000000000',
       '70000000000000000007000000000000',
       '70000000000000000007000000000000',
       '70000000000000000007000000000000',
       '70000000000000000000700000000000',
       '70000000000000000000700000000000',
       '70000000000000000000700000000000',
       '70000000000000000000700000000000',
       '70000000000000000000070000000000',
       '70000000000000000000070000000000',
       '70000000000000000000070000000000',
       '70000000000000000000070000000000',
       '70000000000000000000007000000000',
       '70000000000000000000007000000000',
       '70000000000000000000007000000000',
       '70000000000000000000007000000000',
       '70000000000000000000000700000000',
       '70000000000000000000000700000000',
       '70000000000000000000000700000000',
       '70000000000000000000000700000000']


pha = ['00000000000000000000000000000000',
       '01000000000000000000000000000000',
       '02000000000000000000000000000000',
       '03000000000000000000000000000000',
       '00000000000000000000000000000000',
       '00100000000000000000000000000000',
       '00200000000000000000000000000000',
       '00300000000000000000000000000000',
       '00000000000000000000000000000000',
       '00010000000000000000000000000000',
       '00020000000000000000000000000000',
       '00030000000000000000000000000000',
       '00000000000000000000000000000000',
       '00001000000000000000000000000000',
       '00002000000000000000000000000000',
       '00003000000000000000000000000000',
       '00000000000000000000000000000000',
       '00000100000000000000000000000000',
       '00000200000000000000000000000000',
       '00000300000000000000000000000000',
       '00000000000000000000000000000000',
       '00000010000000000000000000000000',
       '00000020000000000000000000000000',
       '00000030000000000000000000000000',
       '00000000000000000000000000000000',
       '00000001000000000000000000000000',
       '00000002000000000000000000000000',
       '00000003000000000000000000000000',
       '00000000000000000000000000000000',
       '00000000000000001000000000000000',
       '00000000000000002000000000000000',
       '00000000000000003000000000000000',
       '00000000000000000000000000000000',
       '00000000000000000100000000000000',
       '00000000000000000200000000000000',
       '00000000000000000300000000000000',
       '00000000000000000000000000000000',
       '00000000000000000010000000000000',
       '00000000000000000020000000000000',    
       '00000000000000000030000000000000',
       '00000000000000000000000000000000',
       '00000000000000000001000000000000',
       '00000000000000000002000000000000',
       '00000000000000000003000000000000',
       '00000000000000000000000000000000',
       '00000000000000000000100000000000',
       '00000000000000000000200000000000',
       '00000000000000000000300000000000',
       '00000000000000000000000000000000',
       '00000000000000000000010000000000',       
       '00000000000000000000020000000000', 
       '00000000000000000000030000000000', 
       '00000000000000000000000000000000',
       '00000000000000000000001000000000', 
       '00000000000000000000002000000000', 
       '00000000000000000000003000000000', 
       '00000000000000000000000000000000',
       '00000000000000000000000100000000', 
       '00000000000000000000000200000000', 
       '00000000000000000000000300000000']

amp = '66666666'

for sec_idx in range(len(pha)):
    os.system('cp wil6210_sparrow_plus_tx.brd ./codebook_brd/ACO_rx/wil6210_rx' + str(sec_idx+1) + '.brd')
    brd_name_out = './directional_16ant/wil6210_rx'+ str(sec_idx+1) +'.brd'
    set_beam(brd_name_out, 0, 0, 0, '00000000000000000000000000000000', '00000000000000000000000000000000', '00000000')

for sec_idx in range(len(pha)):
    brd_name_out = './codebook_brd/ACO_rx/wil6210_rx'+ str(sec_idx+1) +'.brd'
    print('Module:%d, Sector:%d' % (0, sec_idx))
    set_beam(brd_name_out, 0, 0, 0, mag[sec_idx], pha[sec_idx], amp)

with open('./codebook_brd/ACO_rx/ACO_rx_16ant.txt', 'w') as f:
     for sector in pha:
         f.write("%s\n" % sector)